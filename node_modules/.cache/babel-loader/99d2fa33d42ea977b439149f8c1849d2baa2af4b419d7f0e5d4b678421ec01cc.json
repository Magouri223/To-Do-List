{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saifm\\\\Downloads\\\\To-do-list-main\\\\To-do-list-main\\\\src\\\\components\\\\SingleTask.js\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SingleTask({\n  task,\n  handledelete,\n  handleDone\n}) {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const deleteTask = () => {\n    handledelete(task.id);\n  };\n  const doneTask = () => {\n    handleDone(task.id);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['Light'].map(variant => /*#__PURE__*/_jsxDEV(Card, {\n      bg: variant.toLowerCase(),\n      text: variant.toLowerCase() === 'light' ? 'dark' : 'white',\n      style: {\n        width: '18rem'\n      },\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          style: {\n            textDecoration: task.done ? 'line-through' : 'none',\n            cursor: 'pointer'\n          },\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"15px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                \"aria-label\": \"option 1\",\n                onClick: doneTask,\n                checked: task.done\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.date.getDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: months[task.date.getMonth()]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.date.getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              style: {\n                width: \"30%\"\n              },\n              onClick: deleteTask,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)\n    }, variant, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_c = SingleTask;\nexport default SingleTask;\nvar _c;\n$RefreshReg$(_c, \"SingleTask\");","map":{"version":3,"names":["Card","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleTask","task","handledelete","handleDone","months","deleteTask","id","doneTask","children","map","variant","bg","toLowerCase","text","style","width","className","Body","Title","textDecoration","done","cursor","fileName","_jsxFileName","lineNumber","columnNumber","Text","display","flexDirection","gap","Check","onClick","checked","date","getDate","getMonth","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/saifm/Downloads/To-do-list-main/To-do-list-main/src/components/SingleTask.js"],"sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SingleTask({task,handledelete,handleDone}){\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const deleteTask=()=>{\r\n        handledelete(task.id);\r\n    }\r\n    const doneTask=()=>{\r\n        handleDone(task.id);\r\n    }\r\n    return (\r\n        <>\r\n          {['Light'].map((variant) => (\r\n            <Card\r\n              bg={variant.toLowerCase()}\r\n              key={variant}\r\n              text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n              style={{ width: '18rem' }}\r\n              className=\"mb-2\"\r\n            >\r\n             \r\n              <Card.Body >\r\n                <Card.Title style={{textDecoration: task.done ? 'line-through' : 'none',cursor: 'pointer',}}>{task.text}</Card.Title>\r\n                <Card.Text>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",gap:\"20px\"}}>\r\n                <div style={{display:\"flex\",gap:\"15px\"}}>\r\n                <Form.Check aria-label=\"option 1\" onClick={doneTask} checked={task.done} />\r\n                <span>done</span>\r\n                </div>\r\n                <span>{task.date.getDate()}</span>\r\n                <span>{months[task.date.getMonth()]}</span>\r\n                <span>{task.date.getFullYear()}</span>\r\n                <Button variant=\"danger\" style={{width:\"30%\"}} onClick={deleteTask}>Delete</Button>\r\n                </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </>\r\n      );\r\n}\r\nexport default SingleTask;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}